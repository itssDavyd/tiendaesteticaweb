import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { TimeUnit } from '../../models/time-unit.enum';
import * as i0 from "@angular/core";
export declare class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {
    timeUnit: typeof TimeUnit;
    isClockFaceDisabled: boolean;
    innerClockFaceSize: number;
    faceTime: ClockFaceTime[];
    selectedTime: ClockFaceTime;
    unit: TimeUnit;
    format: number;
    minutesGap: number;
    timeChange: EventEmitter<ClockFaceTime>;
    timeSelected: EventEmitter<number>;
    clockFace: ElementRef;
    clockHand: ElementRef;
    private isStarted;
    private touchStartHandler;
    private touchEndHandler;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    trackByTime(_: any, time: ClockFaceTime): string | number;
    onMousedown(e: any): void;
    selectTime(e: any): void;
    onMouseup(e: any): void;
    ngOnDestroy(): void;
    private addTouchEvents;
    private removeTouchEvents;
    private setClockHandPosition;
    private selectAvailableTime;
    private isInnerClockFace;
    private decreaseClockHand;
    private increaseClockHand;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxMaterialTimepickerFaceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxMaterialTimepickerFaceComponent, "ngx-material-timepicker-face", never, { "faceTime": "faceTime"; "selectedTime": "selectedTime"; "unit": "unit"; "format": "format"; "minutesGap": "minutesGap"; }, { "timeChange": "timeChange"; "timeSelected": "timeSelected"; }, never, never>;
}
