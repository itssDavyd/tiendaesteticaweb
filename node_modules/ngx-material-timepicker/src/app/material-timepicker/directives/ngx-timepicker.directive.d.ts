import { ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DateTime } from 'luxon';
import { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';
import * as i0 from "@angular/core";
export declare class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {
    private elementRef;
    private locale;
    set format(value: number);
    get format(): number;
    private _format;
    set min(value: string | DateTime);
    get min(): string | DateTime;
    private _min;
    set max(value: string | DateTime);
    get max(): string | DateTime;
    private _max;
    set timepicker(picker: NgxMaterialTimepickerComponent);
    private _timepicker;
    set value(value: string);
    get value(): string;
    private _value;
    disabled: boolean;
    disableClick: boolean;
    private timepickerSubscriptions;
    private previousFormat;
    onTouched: () => void;
    private onChange;
    constructor(elementRef: ElementRef, locale: string);
    get element(): any;
    private set defaultTime(value);
    updateValue(value: string): void;
    ngOnChanges(changes: SimpleChanges): void;
    onClick(event: any): void;
    writeValue(value: string): void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnDestroy(): void;
    private registerTimepicker;
    private updateInputValue;
    private setTimeIfAvailable;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimepickerDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TimepickerDirective, "[ngxTimepicker]", never, { "format": "format"; "min": "min"; "max": "max"; "timepicker": "ngxTimepicker"; "value": "value"; "disabled": "disabled"; "disableClick": "disableClick"; }, {}, never>;
}
